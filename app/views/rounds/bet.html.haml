%h1= "#{@round} - Bet!"

- if @round.errors.any?
  %h2= "#{pluralize(@round.errors.count, "error")} prohibited this round from being saved:"
  %ul
    - @round.errors.full_messages.each do |message|
      %li= message

%p
  %b Last time to bet:
  = @round.expiration_date.to_formatted_s(:istra)
%p
  %b Tournament:
  = link_to @round.tournament, tournament_path(@round.tournament)

= simple_form_for :bet, url: update_bet_round_path(@round), method: :put do |f|
  - if not @bets.empty?
    %b Games:
    %table.table.table-dark.table-striped.table-hover.my-table
      %tbody
        %tr
          %th Description
          %th Team 1
          %th Team 2
          %th Time
          %th Points
          %th Result
        - @bets.each do |bet|
          %tr
            %td= bet.game.description
            %td= bet.game.team1
            %td= bet.game.team2
            %td= bet.game.start_time.to_formatted_s(:istra)
            %td= bet.game.bet_points
            %td.blocked_legend{id: "bet_on_game_#{bet.game.id}"}
              = f.collection_radio_buttons :answer,
                bet.answer_hash,
                :second,
                :first,
                html_options: {class: "form_check"},
                item_wrapper_tag: false,
                checked: Bet.answers[bet.answer] do |b| _id = "bet_id_#{bet.game.id}_#{b.value}"; lab = b.label(for: _id, class: "collection_radio_buttons") {b.radio_button(name: "bets[#{bet.game.id}]", id: _id, class: "form-check-input radio_buttons required") + b.text}; "<div class='form_check'>#{lab}</div>" end

  - if not @mc_bets.empty?
    %b Multi-Choice:
    %table.table.table-dark.table-striped.table-hover.my-table
      %tbody
        %tr
          %th Description
          %th Points
          %th Result
      - @mc_bets.each do |bet|
        %tr
          %td= bet.multi_choice.description
          %td= bet.multi_choice.bet_points
          %td.blocked_legend{id: "bet_on_game_#{bet.multi_choice.id}"}
            = f.input :answer,
              as: :radio_buttons,
              collection: bet.multi_choice.options,
              checked: bet.answer,
              input_html: { name: "mc_bets[#{bet.multi_choice.id}]" }

  = f.submit 'Bet!', class: "btn btn-small btn-primary"
  = link_to "Cancel", round_path(@round), class: "btn btn-small btn-info"
